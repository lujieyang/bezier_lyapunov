wNBB = z[-3:]
quatdot[[1]] = 0.5 * (-wNBB[[1]] * quat[[2]] - wNBB[[2]] * quat[[3]] - wNBB[[3]] * quat[[4]])
quatdot[[2]] = 0.5 * (wNBB[[1]] * quat[[1]] + wNBB[[3]] * quat[[3]] - wNBB[[2]] * quat[[4]])
quatdot[[3]] = 0.5 * (wNBB[[2]] * quat[[1]] - wNBB[[3]] * quat[[2]] + wNBB[[1]] * quat[[4]])
quatdot[[4]] = 0.5 * (wNBB[[3]] * quat[[1]] + wNBB[[2]] * quat[[2]] - wNBB[[1]] * quat[[3]])

RNB = np.zeros([3, 3])
RNB[[1, 1]] = 1 - 2 * quat[[3]] * quat[[3]] - 2 * quat[[4]] * quat[[4]]
RNB[[1, 2]] = 2 * quat[[2]] * quat[[3]] - 2 * quat[[1]] * quat[[4]]
RNB[[1, 3]] = 2 * quat[[2]] * quat[[4]] + 2 * quat[[1]] * quat[[3]]
RNB[[2, 1]] = 2 * quat[[2]] * quat[[3]] + 2 * quat[[1]] * quat[[4]]
RNB[[2, 2]] = 1 - 2 * quat[[2]] * quat[[2]] - 2 * quat[[4]] * quat[[4]]
RNB[[2, 3]] = 2 * quat[[3]] * quat[[4]] - 2 * quat[[1]] * quat[[2]]
RNB[[3, 1]] = 2 * quat[[2]] * quat[[4]] - 2 * quat[[1]] * quat[[3]]
RNB[[3, 2]] = 2 * quat[[3]] * quat[[4]] + 2 * quat[[1]] * quat[[2]]
RNB[[3, 3]] = 1 - 2 * quat[[2]] * quat[[2]] - 2 * quat[[3]] * quat[[3]]

xyzDDt = (FgravityN + RNB @ FaeroB) / m

IwNBB = I @ wNBB
wIw = np.array([wNBB[[2]]*IwNBB[[3]] - wNBB[[3]]*IwNBB[[2]], -(wNBB[[1]]*IwNBB[[3]] - wNBB[[3]]*IwNBB[[1]]),
wNBB[[1]]*IwNBB[[2]] - wNBB[[2]]*IwNBB[[1]]])
alphaNBB = np.array([(TauB[[1]] - wIw[[1]]) / I[[1, 1]],
                            (TauB[[2]] - wIw[[2]]) / I[[2, 2]],
                            (TauB[[3]] - wIw[[3]]) / I[[3, 3]]])

{{0.0015, 0, 0}, 
          {0, 0.0025, 0}, 
          {0, 0, 0.0035}}

z[[1]] -> 0, z[[2]] -> 0, z[[3]] -> 0, z[[4]] -> 0, z[[5]] -> 0, z[[6]] -> 0, 
z[[7]] -> 0, z[[8]] -> 0, z[[9]] -> 0, z[[10]] -> 0, z[[11]] -> 0, z[[12]] -> 0, 
z[[13]] -> 0, u[[1]] -> m*g/4, u[[2]] -> m*g/4, u[[3]] -> m*g/4, u[[4]] -> m*g/4